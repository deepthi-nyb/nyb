SELECT
    *
FROM
    HR.EMPLOYEES
WHERE
    SALARY > 3000;

SELECT
    *
FROM
    HR.EMPLOYEES
WHERE
    FIRST_NAME LIKE 'A%';

SELECT
    *
FROM
    HR.EMPLOYEES
WHERE
    DEPARTMENT_ID = 10
    OR 20;

SELECT
    FIRST_NAME,
    LENGTH(FIRST_NAME) AS NAME_LENGTH
FROM
    HR.EMPLOYEES;

SELECT
    *
FROM
    HR.EMPLOYEES
WHERE
    SALARY BETWEEN 2500 AND 7000
    AND SALARY != 5000;

SELECT
    *
FROM
    HR.EMPLOYEES
WHERE
    FIRST_NAME LIKE '%n'
    AND COMMISSION_PCT IS NULL;

SELECT
    FIRST_NAME,
    SALARY,
    ROUND(SALARY +(SALARY * 0.15)) AS HIKED_SAL
FROM
    HR.EMPLOYEES;

SELECT
    DEPARTMENT_ID,
    SUM(SALARY),
    COUNT(EMPLOYEE_ID)
FROM
    HR.EMPLOYEES
GROUP BY
    DEPARTMENT_ID;

SELECT
    EMPLOYEE_ID,
    FIRST_NAME,
    ROUND(MONTHS_BETWEEN(SYSDATE, HIRE_DATE))
FROM
    HR.EMPLOYEES;
---constraints
SELECT
    *
FROM
    HR.EMPLOYEES;

CREATE TABLE TEST_CONSTRAINTS (
    ID        NUMBER PRIMARY KEY,
    NAME      VARCHAR2(100) NOT NULL,
    PHNO      NUMBER UNIQUE,
    SALARY    NUMBER CHECK ( SALARY > 4000 ),
    HIRE_DATE DATE DEFAULT SYSDATE
);

SELECT
    *
FROM
    HR.DEPARTMENTS;

SELECT
    *
FROM
    HR.LOCATIONS;

SELECT
    E.FIRST_NAME,
    D.DEPARTMENT_NAME,
    L.CITY
FROM
         HR.EMPLOYEES E
    INNER JOIN HR.DEPARTMENTS D ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
    INNER JOIN HR.LOCATIONS   L ON D.LOCATION_ID = L.LOCATION_ID;

SELECT
    *
FROM
    HR.EMPLOYEES
WHERE
    DEPARTMENT_ID IS NULL;

SELECT
    *
FROM
    (
        SELECT
            E.*,
            DENSE_RANK()
            OVER(PARTITION BY DEPARTMENT_ID
                 ORDER BY
                     SALARY DESC
            ) AS RNK
        FROM
            HR.EMPLOYEES E
    )
WHERE
    RNK = 1;
--or
SELECT
    FIRST_NAME,
    DEPARTMENT_ID,
    SALARY
FROM
    HR.EMPLOYEES E
WHERE
    SALARY = (
        SELECT
            MAX(SALARY)
        FROM
            HR.EMPLOYEES
        WHERE
            DEPARTMENT_ID = E.DEPARTMENT_ID
    );